version: "3.8"
services:
  mongodb:
    container_name: mongodb
    image: mongo:4.4
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_USERNAME: $MONGODB_USER
      MONGO_INITDB_PASSWORD: $MONGODB_PASS
      MONGO_INIT_USER_DB_NAME: $MONGODB_USER_DB_NAME
      MONGO_INIT_DOCS_DB_NAME: $MONGODB_DOCS_DB_NAME
    volumes:
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    ports:
      - $MONGODB_PORT:27017
  redis:
    image: redis:7.0.5-alpine
    container_name: redis
    env_file:
      - .env
    ports:
      - $REDIS_PORT:$REDIS_PORT
  api:
    container_name: api
    build:
      context: .
      dockerfile: .docker/api/Dockerfile
    command: npm run start:prod
    env_file:
      - .env
    ports:
      - $API_PORT:$API_PORT
    depends_on:
      - redis
      - mongodb
  user-microservice:
    container_name: user-microservice
    build:
      context: .
      dockerfile: .docker/user-microservice/Dockerfile
    command: npm run start:user-microservice:prod
    env_file:
      - .env
    ports:
      - $USER_MICROSERVICE_PORT:$USER_MICROSERVICE_PORT
    depends_on:
      - redis
      - mongodb
  doc-microservice:
    container_name: doc-microservice
    build:
      context: .
      dockerfile: .docker/doc-microservice/Dockerfile
    command: npm run start:doc-microservice:prod
    env_file:
      - .env
    ports:
      - $DOC_MICROSERVICE_PORT:$DOC_MICROSERVICE_PORT
    depends_on:
      - redis
      - mongodb
